# AUTOGENERATED FROM C#. DO NOT MODIFY.

from tdw.commands.replicant_command import ReplicantCommand
from tdw.replicant.replicant_body_part import ReplicantBodyPart
from typing import List


class PlayReplicantAnimation(ReplicantCommand):
    """
    Play a Replicant animation. Optionally, maintain the positions and rotations of specified body parts as set in the IK sub-step prior to the animation sub-step.
    """

    def __init__(self, id: int, loop: bool, name: str, framerate: int = -1, forward: bool = True, ik_body_parts: List[ReplicantBodyPart] = None):
        """
        :param id: The unique object ID.
        :param loop: If True, this animation will loop without announcing that it's done.
        :param name: The name of the animation clip to play.
        :param framerate: If greater than zero, play the animation at this framerate instead of the animation's framerate.
        :param forward: If True, play the animation normally. If False, play the naimation in reverse.
        :param ik_body_parts: These body parts will maintain their positions based on inverse kinematics (IK).
        """

        super().__init__(id=id)
        """:field
        The name of the animation clip to play.
        """
        self.name: str = name
        """:field
        If greater than zero, play the animation at this framerate instead of the animation's framerate.
        """
        self.framerate: int = framerate
        """:field
        If True, play the animation normally. If False, play the naimation in reverse.
        """
        self.forward: bool = forward
        if ik_body_parts is None:
            """:field
            These body parts will maintain their positions based on inverse kinematics (IK).
            """
            self.ik_body_parts: List[ReplicantBodyPart] = list()
        else:
            self.ik_body_parts = ik_body_parts
        """:field
        If True, this animation will loop without announcing that it's done.
        """
        self.loop: bool = loop
