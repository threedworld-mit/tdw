# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FBOutput

import tdw.flatbuffers

class ScreenSize(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsScreenSize(cls, buf, offset):
        n = tdw.flatbuffers.encode.Get(tdw.flatbuffers.packer.uoffset, buf, offset)
        x = ScreenSize()
        x.Init(buf, n + offset)
        return x

    # ScreenSize
    def Init(self, buf, pos):
        self._tab = tdw.flatbuffers.table.Table(buf, pos)

    # ScreenSize
    def Width(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(tdw.flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ScreenSize
    def Height(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(tdw.flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def ScreenSizeStart(builder): builder.StartObject(2)
def ScreenSizeAddWidth(builder, width): builder.PrependInt32Slot(0, width, 0)
def ScreenSizeAddHeight(builder, height): builder.PrependInt32Slot(1, height, 0)
def ScreenSizeEnd(builder): return builder.EndObject()
