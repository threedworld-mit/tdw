# AUTOGENERATED FROM C#. DO NOT MODIFY.

from tdw.commands.robot_command import RobotCommand
from typing import Dict


class ParentAvatarToRobot(RobotCommand):
    """
    Parent an avatar to a robot. The avatar's position and rotation will always be relative to the robot. Usually you'll want to do this to add a camera to the robot.
    """

    def __init__(self, body_part_id: int, position: Dict[str, float], avatar_id: str = "a", id: int = 0):
        """
        :param body_part_id: Parent the avatar to a body part of this robot with this ID. Send send_static_robots to get the IDs and names of this robot's body parts.
        :param position: The position of the avatar relative to the robot.
        :param avatar_id: The ID of the avatar. It must already exist in the scene.
        :param id: The ID of the robot in the scene.
        """

        super().__init__(id=id)
        """:field
        The ID of the avatar. It must already exist in the scene.
        """
        self.avatar_id: str = avatar_id
        """:field
        The position of the avatar relative to the robot.
        """
        self.position: Dict[str, float] = position
        """:field
        Parent the avatar to a body part of this robot with this ID. Send send_static_robots to get the IDs and names of this robot's body parts.
        """
        self.body_part_id: int = body_part_id
