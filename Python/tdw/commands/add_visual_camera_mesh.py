# AUTOGENERATED FROM C#. DO NOT MODIFY.

from tdw.commands.sensor_container_command import SensorContainerCommand
from typing import Dict


class AddVisualCameraMesh(SensorContainerCommand):
    """
    Add a visual camera mesh to the sensor container. The visual mesh won't have colliders and won't respond to physics.
    """

    def __init__(self, position: Dict[str, float] = None, scale: Dict[str, float] = None, sensor_name: str = "SensorContainer", avatar_id: str = "a"):
        """
        :param position: The position of the visual camera mesh relative to the sensor container.
        :param scale: The scale of the visual camera mesh.
        :param sensor_name: The name of the target sensor.
        :param avatar_id: The ID of the avatar.
        """

        super().__init__(sensor_name=sensor_name, avatar_id=avatar_id)
        if position is None:
            """:field
            The position of the visual camera mesh relative to the sensor container.
            """
            self.position: Dict[str, float] = {"x": 0, "y": 0, "z": -0.06}
        else:
            self.position = position
        if scale is None:
            """:field
            The scale of the visual camera mesh.
            """
            self.scale: Dict[str, float] = {"x": 1, "y": 1, "z": 1}
        else:
            self.scale = scale
