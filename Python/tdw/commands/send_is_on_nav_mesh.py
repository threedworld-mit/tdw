# AUTOGENERATED FROM C#. DO NOT MODIFY.

from tdw.commands.nav_mesh_command import NavMeshCommand
from typing import Dict


class SendIsOnNavMesh(NavMeshCommand):
    """
    Given a position, try to get the nearest position on the NavMesh.
    """

    def __init__(self, position: Dict[str, float], max_distance: float = 1.0, id: int = 0):
        """
        :param position: The position being tested. Its y value will be normalized to the y value of the NavMesh at the (x, z) coordinate.
        :param max_distance: Radius of the search for a valid point. A large value will result in an expensive calculation; try to keep the value below 5.
        :param id: The ID of this output data. This is useful if this command is sent more than once.
        """

        super().__init__()
        """:field
        The position being tested. Its y value will be normalized to the y value of the NavMesh at the (x, z) coordinate.
        """
        self.position: Dict[str, float] = position
        """:field
        Radius of the search for a valid point. A large value will result in an expensive calculation; try to keep the value below 5.
        """
        self.max_distance: float = max_distance
        """:field
        The ID of this output data. This is useful if this command is sent more than once.
        """
        self.id: int = id
