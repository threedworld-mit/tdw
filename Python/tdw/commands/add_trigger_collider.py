# AUTOGENERATED FROM C#. DO NOT MODIFY.

from tdw.commands.object_command import ObjectCommand
from typing import Dict


class AddTriggerCollider(ObjectCommand):
    """
    Add a trigger collider to an object. Trigger colliders are non-physics colliders that will merely detect if they intersect with something. You can use this to detect whether one object is inside another. The side, position, and rotation of the trigger collider always matches that of the parent object. Per trigger event, the trigger collider will send output data depending on which of the enter, stay, and exit booleans are True.
    """

    def __init__(self, id: int, shape: str = "cube", enter: bool = False, stay: bool = False, exit: bool = False, trigger_id: int = 0, scale: Dict[str, float] = None, position: Dict[str, float] = None, rotation: Dict[str, float] = None):
        """
        :param id: The unique object ID.
        :param shape: The shape of the collider.
        :param enter: If True, this collider will listen for enter events.
        :param stay: If True, this collider will listen for stay events.
        :param exit: If True, this collider will listen for exit events.
        :param trigger_id: The ID of this trigger collider. This can be used to differentiate between multiple trigger colliders attached to the same object.
        :param scale: The scale of the trigger collider.
        :param position: The position of the trigger collider relative to the parent object.
        :param rotation: The rotation of the trigger collider in Euler angles relative to the parent object.
        """

        super().__init__(id=id)
        """:field
        The shape of the collider.
        """
        self.shape: str = shape
        """:field
        If True, this collider will listen for enter events.
        """
        self.enter: bool = enter
        """:field
        If True, this collider will listen for stay events.
        """
        self.stay: bool = stay
        """:field
        If True, this collider will listen for exit events.
        """
        self.exit: bool = exit
        """:field
        The ID of this trigger collider. This can be used to differentiate between multiple trigger colliders attached to the same object.
        """
        self.trigger_id: int = trigger_id
        if scale is None:
            """:field
            The scale of the trigger collider.
            """
            self.scale: Dict[str, float] = {"x": 1, "y": 1, "z": 1}
        else:
            self.scale = scale
        if position is None:
            """:field
            The position of the trigger collider relative to the parent object.
            """
            self.position: Dict[str, float] = {"x": 0, "y": 0, "z": 0}
        else:
            self.position = position
        if rotation is None:
            """:field
            The rotation of the trigger collider in Euler angles relative to the parent object.
            """
            self.rotation: Dict[str, float] = {"x": 0, "y": 0, "z": 0}
        else:
            self.rotation = rotation
