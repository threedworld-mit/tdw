# AUTOGENERATED FROM C#. DO NOT MODIFY.

from abc import ABC
from tdw.commands.magnebot_command import MagnebotCommand


class MagnebotWheelsCommand(MagnebotCommand, ABC):
    """
    These commands set the friction coefficient of a Magnebot's wheels over time given the distance to a target. These commands must be sent per-frame. These commands will check if the Magnebot is at the target per PHYSICS frame, INCLUDING frames skipped by step_physics. This greatly increases the precision of a Magnebot simulation.
    """

    def __init__(self, arrived_at: float = 0.01, minimum_friction: float = 0.05, maximum_friction: float = 1, id: int = 0):
        """
        :param arrived_at: The threshold for determining whether the Magnebot is at the target.
        :param minimum_friction: The minimum friction coefficient for the wheels. The default value (0.05) is also the default friction coefficient of the wheels.
        :param maximum_friction: The maximum friction coefficient for the wheels when slowing down.
        :param id: The ID of the robot in the scene.
        """

        super().__init__(id=id)
        """:field
        The threshold for determining whether the Magnebot is at the target.
        """
        self.arrived_at: float = arrived_at
        """:field
        The minimum friction coefficient for the wheels. The default value (0.05) is also the default friction coefficient of the wheels.
        """
        self.minimum_friction: float = minimum_friction
        """:field
        The maximum friction coefficient for the wheels when slowing down.
        """
        self.maximum_friction: float = maximum_friction
