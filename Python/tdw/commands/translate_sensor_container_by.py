# AUTOGENERATED FROM C#. DO NOT MODIFY.

from tdw.commands.sensor_container_command import SensorContainerCommand
from typing import Dict


class TranslateSensorContainerBy(SensorContainerCommand):
    """
    Translate the sensor container relative to the avatar by a given directional vector.
    """

    def __init__(self, move_by: Dict[str, float] = None, sensor_name: str = "SensorContainer", avatar_id: str = "a"):
        """
        :param move_by: How much to translate the container's local position by.
        :param sensor_name: The name of the target sensor.
        :param avatar_id: The ID of the avatar.
        """

        super().__init__(sensor_name=sensor_name, avatar_id=avatar_id)
        if move_by is None:
            """:field
            How much to translate the container's local position by.
            """
            self.move_by: Dict[str, float] = {"x": 0, "y": 0, "z": 0}
        else:
            self.move_by = move_by
