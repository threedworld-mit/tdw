# AUTOGENERATED FROM C#. DO NOT MODIFY.

from tdw.commands.object_command import ObjectCommand


class SetPhysicMaterial(ObjectCommand):
    """
    Set the physic material of an object and apply friction and bounciness values to the object. These settings can be overriden by sending the command again, or by assigning a semantic material via set_semantic_material_to.
    """

    def __init__(self, id: int, bounciness: float, static_friction: float, dynamic_friction: float):
        """
        :param id: The unique object ID.
        :param bounciness: The bounciness of the object. A higher value means that the object will bounce without losing much energy. Must be between 0 and 1.
        :param static_friction: Friction when the object is not moving. A higher value means that a lot of force will be needed to make the object start moving. Must be between 0 and 1.
        :param dynamic_friction: Friction when the object is already moving. A higher value means that the object will come to rest very quickly. Must be between 0 and 1.
        """

        super().__init__(id=id)
        """:field
        Friction when the object is already moving. A higher value means that the object will come to rest very quickly. Must be between 0 and 1.
        """
        self.dynamic_friction: float = dynamic_friction
        """:field
        Friction when the object is not moving. A higher value means that a lot of force will be needed to make the object start moving. Must be between 0 and 1.
        """
        self.static_friction: float = static_friction
        """:field
        The bounciness of the object. A higher value means that the object will bounce without losing much energy. Must be between 0 and 1.
        """
        self.bounciness: float = bounciness
