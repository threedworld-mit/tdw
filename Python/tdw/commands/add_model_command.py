# AUTOGENERATED FROM C#. DO NOT MODIFY.

from abc import ABC
from tdw.commands.add_object_command import AddObjectCommand
from typing import Dict, List


class AddModelCommand(AddObjectCommand, ABC):
    """
    These commands add model asset bundles to the scene.
    """

    def __init__(self, url: str, name: str, id: int, scale_factor: float = 1, category: str = "", affordance_points: List[Dict[str, float]] = None):
        """
        :param url: The location of the asset bundle. If the asset bundle is remote, this must be a valid URL. If the asset is a local file, this must begin with the prefix "file:///"
        :param name: The name of the asset bundle.
        :param id: The unique ID of the object.
        :param scale_factor: The default scale factor of a model.
        :param category: The model category.
        :param affordance_points: A list of affordance points. Can be empty.
        """

        super().__init__(name=name, url=url)
        """:field
        The unique ID of the object.
        """
        self.id: int = id
        """:field
        The default scale factor of a model.
        """
        self.scale_factor: float = scale_factor
        """:field
        The model category.
        """
        self.category: str = category
        if affordance_points is None:
            """:field
            A list of affordance points. Can be empty.
            """
            self.affordance_points: List[Dict[str, float]] = list()
        else:
            self.affordance_points = affordance_points
