# AUTOGENERATED FROM C#. DO NOT MODIFY.

from abc import ABC
from tdw.commands.video_capture_command import VideoCaptureCommand
from typing import Dict


class StartVideoCaptureCommand(VideoCaptureCommand, ABC):
    """
    These commands start video capture using ffmpeg. Because ffmpeg arguments are platform-specific, you must use the platform-specific command, e.g. start_video_capture_windows
    """

    def __init__(self, output_path: str, ffmpeg: str = "", overwrite: bool = True, framerate: int = 60, position: Dict[str, int] = None, audio: bool = True, audio_codec: str = "aac", video_codec: str = "h264", preset: str = "ultrafast", qp: int = 1, pixel_format: str = "yuv420p", log_args: bool = False, override_args: str = ""):
        """
        :param output_path: The absolute path to the output file, e.g. /home/user/video.mp4
        :param ffmpeg: The path to the ffmpeg process. Set this parameter only if you're using a non-standard path.
        :param overwrite: If True, overwrite the video if it already exists.
        :param framerate: The framerate of the output video.
        :param position: The top-left corner of the screen region that will be captured. On Windows, this is ignored if window_capture == True.
        :param audio: If True, audio will be captured.
        :param audio_codec: The audio codec. You should usually keep this set to the default value. See: <ulink url="https://ffmpeg.org/ffmpeg-codecs.html">https://ffmpeg.org/ffmpeg-codecs.html</ulink>
        :param video_codec: The video codec. You should usually keep this set to the default value. See: <ulink url="https://ffmpeg.org/ffmpeg-codecs.html">https://ffmpeg.org/ffmpeg-codecs.html</ulink>
        :param preset: H.264 video encoding only. A preset of parameters that affect encoding speed and compression. See: <ulink url="https://trac.ffmpeg.org/wiki/Encode/H.264">https://trac.ffmpeg.org/wiki/Encode/H.264</ulink>
        :param qp: H.264 video encoding only. This controls the video quality. 0 is lossless.
        :param pixel_format: The pixel format. You should almost never need to set this to anything other than the default value.
        :param log_args: If True, log the command-line arguments to the player log (this can additionally be received by the controller via the send_log_messages command).
        :param override_args: If not empty, replace the ffmpeg arguments with this string. Usually, you won't want to set this. If you want to use ffmpeg for something other than screen recording, consider launching it from a Python script using subprocess.call().
        """

        super().__init__()
        """:field
        The absolute path to the output file, e.g. /home/user/video.mp4
        """
        self.output_path: str = output_path
        """:field
        The path to the ffmpeg process. Set this parameter only if you're using a non-standard path.
        """
        self.ffmpeg: str = ffmpeg
        """:field
        If True, overwrite the video if it already exists.
        """
        self.overwrite: bool = overwrite
        """:field
        The framerate of the output video.
        """
        self.framerate: int = framerate
        if position is None:
            """:field
            The top-left corner of the screen region that will be captured. On Windows, this is ignored if window_capture == True.
            """
            self.position: Dict[str, int] = {"x": 0, "y": 0}
        else:
            self.position = position
        """:field
        If True, audio will be captured.
        """
        self.audio: bool = audio
        """:field
        The audio codec. You should usually keep this set to the default value. See: <ulink url="https://ffmpeg.org/ffmpeg-codecs.html">https://ffmpeg.org/ffmpeg-codecs.html</ulink>
        """
        self.audio_codec: str = audio_codec
        """:field
        The video codec. You should usually keep this set to the default value. See: <ulink url="https://ffmpeg.org/ffmpeg-codecs.html">https://ffmpeg.org/ffmpeg-codecs.html</ulink>
        """
        self.video_codec: str = video_codec
        """:field
        H.264 video encoding only. A preset of parameters that affect encoding speed and compression. See: <ulink url="https://trac.ffmpeg.org/wiki/Encode/H.264">https://trac.ffmpeg.org/wiki/Encode/H.264</ulink>
        """
        self.preset: str = preset
        """:field
        H.264 video encoding only. This controls the video quality. 0 is lossless.
        """
        self.qp: int = qp
        """:field
        The pixel format. You should almost never need to set this to anything other than the default value.
        """
        self.pixel_format: str = pixel_format
        """:field
        If True, log the command-line arguments to the player log (this can additionally be received by the controller via the send_log_messages command).
        """
        self.log_args: bool = log_args
        """:field
        If not empty, replace the ffmpeg arguments with this string. Usually, you won't want to set this. If you want to use ffmpeg for something other than screen recording, consider launching it from a Python script using subprocess.call().
        """
        self.override_args: str = override_args
