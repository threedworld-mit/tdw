# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FBOutput

import tdw.flatbuffers

class TimeSinceStartup(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsTimeSinceStartup(cls, buf, offset):
        n = tdw.flatbuffers.encode.Get(tdw.flatbuffers.packer.uoffset, buf, offset)
        x = TimeSinceStartup()
        x.Init(buf, n + offset)
        return x

    # TimeSinceStartup
    def Init(self, buf, pos):
        self._tab = tdw.flatbuffers.table.Table(buf, pos)

    # TimeSinceStartup
    def Ticks(self):
        o = tdw.flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(tdw.flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def TimeSinceStartupStart(builder): builder.StartObject(1)
def TimeSinceStartupAddTicks(builder, ticks): builder.PrependInt64Slot(0, ticks, 0)
def TimeSinceStartupEnd(builder): return builder.EndObject()
