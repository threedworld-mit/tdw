# AUTOGENERATED FROM C#. DO NOT MODIFY.

from tdw.commands.singleton_subscriber_command import SingletonSubscriberCommand
from typing import List


class SendCollisions(SingletonSubscriberCommand):
    """
    Send collision data for all objects and avatars <emphasis>currently</emphasis> in the scene.
    """

    def __init__(self, enter: bool = True, stay: bool = False, exit: bool = False, collision_types: List[str] = None):
        """
        :param enter: If True, listen for when objects enter a collision.
        :param stay: If True, listen for when objects stay in a collision. WARNING: Setting this to True will generate a LOT of data.
        :param exit: If True, listen for when objects exit a collision.
        :param collision_types: The types of collisions that objects will listen for per frame.
        """

        super().__init__()
        """:field
        If True, listen for when objects enter a collision.
        """
        self.enter: bool = enter
        """:field
        If True, listen for when objects stay in a collision. WARNING: Setting this to True will generate a LOT of data.
        """
        self.stay: bool = stay
        """:field
        If True, listen for when objects exit a collision.
        """
        self.exit: bool = exit
        if collision_types is None:
            """:field
            The types of collisions that objects will listen for per frame.
            """
            self.collision_types: List[str] = []
        else:
            self.collision_types = collision_types
